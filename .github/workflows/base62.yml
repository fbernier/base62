name: ci

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-D warnings"

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Run cargo check (no_std)
        run: cargo check --all-targets --no-default-features
      - name: Run cargo check (default/alloc)
        run: cargo check --all-targets
      - name: Run cargo check (std)
        run: cargo check --all-targets --features std

  test:
    name: Test Suite
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable]
        include:
          - os: ubuntu-latest
            rust: nightly
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
      - uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@v2  # Updated to v2
        with:
          tool: nextest
      - name: Run tests (no_std)
        run: cargo nextest run --no-default-features
      - name: Run tests (default/alloc)
        run: cargo nextest run
      - name: Run tests (std)
        run: cargo nextest run --features std
      - name: Run doc tests (no_std)
        run: cargo test --doc --no-default-features
      - name: Run doc tests (default/alloc)
        run: cargo test --doc
      - name: Run doc tests (std)
        run: cargo test --doc --features std

  miri:
    name: Miri
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust nightly and miri
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: miri
      - uses: taiki-e/install-action@v2
        with:
          tool: nextest
      - name: Setup miri
        run: cargo miri setup
      - name: Run tests under miri with nextest (no_std)
        run: cargo miri nextest run --no-default-features
      - name: Run tests under miri with nextest (all features)
        run: cargo miri nextest run --all-features
      - name: Run doctests under miri (no_std)
        run: cargo miri test --doc --no-default-features
      - name: Run doctests under miri (all features)
        run: cargo miri test --doc --all-features

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Check formatting
        run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Run clippy (no_std)
        run: cargo clippy --all-targets --no-default-features
      - name: Run clippy (default/alloc)
        run: cargo clippy --all-targets
      - name: Run clippy (std)
        run: cargo clippy --all-targets --features std

  docs:
    name: Docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Check documentation (no_std)
        env:
          RUSTDOCFLAGS: "-D warnings"
        run: cargo doc --no-deps --document-private-items --no-default-features
      - name: Check documentation (default/alloc)
        env:
          RUSTDOCFLAGS: "-D warnings"
        run: cargo doc --no-deps --document-private-items
      - name: Check documentation (std)
        env:
          RUSTDOCFLAGS: "-D warnings"
        run: cargo doc --no-deps --document-private-items --features std
